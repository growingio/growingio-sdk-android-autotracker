/*
 * Copyright 2022 Cpacm
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
import okhttp3.OkHttpClient
import okhttp3.Request

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.squareup.okhttp3:okhttp:4.9.3"
    }
}

def getModuleVersion(moduleId) {
    def version = 'SNAPSHOT'
    libraries.growingio.each { key, value ->
        def library = value.split(":")
        def libraryId = library[1]
        if (moduleId.equals(libraryId)) {
            version = library[2]
            return true
        }
    }
    return version
}

//tasks.withType(PublishToMavenLocal) {
tasks.withType(PublishToMavenRepository) {
    onlyIf {
        def moduleId = POM_ARTIFACT_ID
        def version = getModuleVersion(moduleId)
        if (project.hasProperty('CI_SELECT_MODULE') && project.hasProperty("CI_SELECT_VERSION")) {
            def cmdModuleId = CI_SELECT_MODULE
            if (cmdModuleId != moduleId) {
                println("can't match module:" + moduleId + " with ==> "+ cmdModuleId)
                return false
            }
            if (CI_SELECT_VERSION != "DEFAULT") version = CI_SELECT_VERSION
            moduleId = cmdModuleId
        } else if (project.hasProperty('CI_SELECT_MODULE') || project.hasProperty("CI_SELECT_VERSION")) {
            println("illegal ci params!!")
            return false
        }

        // SNAPSHOT always should publish
        if (version.endsWith('SNAPSHOT')) {
            return true
        }
        // publish when library not in maven repository
        if (checkMavenAarExist(moduleId, version)) {
            println String.format("%s:%s already exist in release maven repository, you should't publish it.", moduleId, version)
            return false
        }

        return true

    }
}

static def getReleaseMavenRepositoryUrl(moduleId, version) {
    return String.format("https://repo.maven.apache.org/maven2/com/growingio/android/%s/%s/", moduleId, version)
}

static def checkMavenAarExist(moduleId, version) {
    try {
        def client = new OkHttpClient()
        def request = new Request.Builder().url(getReleaseMavenRepositoryUrl(moduleId, version)).head().build()
        def response = client.newCall(request).execute()
        //println response.headers()
        //println response.code()
        if (response.code() == 404) {
            response.close()
            return false
        } else {
            response.close()
            return true
        }
    } catch (IOException e) {
        println "Something error:" + e.toString()
        return true
    }
}