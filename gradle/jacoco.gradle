apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.7"
}

def rootDir = project.rootProject.rootDir

def coverageSourceDirs = [
        "$rootDir/growingio-annotation/compiler/src/main/java",
        "$rootDir/growingio-annotation/src/main/java",
        "$rootDir/growingio-tracker-core/src/main/java",
        "$rootDir/growingio-autotracker-core/src/main/java",
        "$rootDir/growingio-data/encoder/src/main/java",
        "$rootDir/growingio-data/json/src/main/java",
        "$rootDir/growingio-data/protobuf/src/main/java",
        "$rootDir/growingio-data/database/src/main/java",
        "$rootDir/growingio-advert/src/main/java",
        "$rootDir/growingio-hybrid/src/main/java",
        "$rootDir/growingio-network/okhttp3/src/main/java",
        "$rootDir/growingio-network/volley/src/main/java",
        "$rootDir/growingio-network/urlconnection/src/main/java",
        "$rootDir/growingio-apm/src/main/java",
        "$rootDir/growingio-tools/snappy/src/main/java",
        "$rootDir/growingio-tools/oaid/src/main/java",
        "$rootDir/growingio-webservice/circler/src/main/java",
        "$rootDir/growingio-webservice/debugger/src/main/java",
        "$rootDir/growingio-annotation/compiler/src/main/java",
//        "$rootDir/gio-sdk/tracker/src/main/java",
//        "$rootDir/gio-sdk/tracker-cdp/src/main/java",
//        "$rootDir/gio-sdk/autotracker/src/main/java",
//        "$rootDir/gio-sdk/autotracker-cdp/src/main/java",
]

def coverageClassDirs = [
        "$rootDir/growingio-annotation/compiler/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-annotation/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-tracker-core/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-autotracker-core/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-data/encoder/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-data/json/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-data/protobuf/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-data/database/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-advert/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-network/okhttp3/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-network/volley/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-network/urlconnection/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-apm/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-tools/snappy/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-tools/oaid/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-webservice/circler/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-webservice/debugger/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-hybrid/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-annotation/compiler/build/classes/java/main",
        //        "$rootDir/gio-sdk/tracker/build/intermediates/javac/debug/classes",
//        "$rootDir/gio-sdk/tracker-cdp/build/intermediates/javac/debug/classes",
//        "$rootDir/gio-sdk/autotracker/build/intermediates/javac/debug/classes",
//        "$rootDir/gio-sdk/autotracker-cdp/build/intermediates/javac/debug/classes",
]

def executionDirs = [
        "$rootDir/growingio-tools/crash/build/jacoco/testDebugUnitTest.exec",
        "$rootDir/growingio-webservice/debugger/build/jacoco/testDebugUnitTest.exec",
        "$rootDir/growingio-webservice/circler/build/jacoco/testDebugUnitTest.exec",
        "$rootDir/growingio-tracker-core/build/jacoco/testDebugUnitTest.exec",
        "$rootDir/growingio-autotracker-core/build/jacoco/testDebugUnitTest.exec",
]

def fileFilter = [
        '**/R.class',
        '**/R$*.class',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*Test*.*',
        'androidx/**',
        'android/app/**',
        'android/content/**',
        'com/example/**',
        'com/gio/**',
        '**/HookClassesConfig.*',
        'android/**/*.*',
        '**/GioIndexer_GIO*',
]

subprojects {
    apply plugin: "jacoco"
    test {
        // Don't instrument and generate code coverage unless "-Pcodecoverage" is set on the command line
        jacoco {
            enabled = project.hasProperty("codecoverage")
        }
    }
}

task jacocoAllReport(type: JacocoReport) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    sourceDirectories.setFrom(files(coverageSourceDirs))

    classDirectories.setFrom(files(coverageClassDirs).collect {
        fileTree(dir: it, exclude: fileFilter)
    })
    executionData.setFrom(fileTree(
            dir: "$rootDir",
            includes: ["**/*.exec", "**/*.ec"]
    ))
//    executionData.setFrom(files(executionDirs))
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug/classes", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "**/*.ec"
    ]))
}
