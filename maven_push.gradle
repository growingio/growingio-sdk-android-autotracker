apply plugin: 'maven-publish'
apply plugin: 'com.novoda.bintray-release'

void writePom(node) {
    def allDependencies = new HashSet<DependencySet>()
    allDependencies.addAll(configurations.api.allDependencies)
    allDependencies.addAll(configurations.releaseApi.allDependencies)
    allDependencies.addAll(configurations.releaseImplementation.allDependencies)
    allDependencies.addAll(configurations.implementation.allDependencies)
    def iterator = allDependencies.iterator()
    while (iterator.hasNext()) {
        def dep = iterator.next()
        if (dep.name == "unspecified" || dep.version == "unspecified") {
            iterator.remove()
        }
    }

    def depsNode = node.appendNode('dependencies')
    allDependencies.each { dep ->
        def depNode = depsNode.appendNode('dependency')
        depNode.appendNode('groupId', dep.group)
        depNode.appendNode('artifactId', dep.name)
        depNode.appendNode('version', dep.version)
    }
}

publish {
    userOrg = BINTRAY_USER_ORG
    repoName = BINTARY_REPO_NAME
    groupId = GROUP_ID
    artifactId = ARTIFACT_ID
    publishVersion = releaseConfiguration.releaseVersion
    desc = BINTARY_DESC
    dryRun = false
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                name = "nexus"
                url = "https://nexus.growingio.com/repository/maven-android/"
                credentials {
                    username = project.hasProperty('bintrayUser') ? project.getProperty('bintrayUser') : ''
                    password = project.hasProperty('bintrayKey') ? project.getProperty('bintrayKey') : ''
                }
            }
        }
    }
}

if (project.name != 'growingio-autotracker-gradle-plugin') {
    apply plugin: 'maven'
    gradle.taskGraph.whenReady { taskGraph ->
        taskGraph.getAllTasks().find {
            it.path == ":$project.name:generatePomFileForReleasePublication"
        }?.doLast {
            file("build/publications/release/pom-default.xml").delete()
            pom {
                project {
                    groupId GROUP_ID
                    artifactId ARTIFACT_ID
                    version releaseConfiguration.releaseVersion
                    packaging 'aar'
                }.withXml {
                    writePom(asNode())
                }
            }.writeTo("build/publications/release/pom-default.xml")
        }
    }
}