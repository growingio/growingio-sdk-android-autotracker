// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildConfiguration = [
                compileVersion     : 33,
                minSdkVersion      : 17,
                targetSdkVersion   : 33,
                sourceCompatibility: JavaVersion.VERSION_1_8,
                targetCompatibility: JavaVersion.VERSION_1_8,
        ]
    }

}

plugins {
    alias libs.plugins.android.application apply false
    alias libs.plugins.android.library apply false
    alias libs.plugins.kotlin.android apply false
    alias libs.plugins.kotlin.jvm apply false

    alias libs.plugins.nexus.staging apply false
    alias libs.plugins.sonarqube apply false

    alias libs.plugins.protobuf apply false

    alias libs.plugins.growingio.plugin apply false
}

apply from: "${rootProject.projectDir}/gradle/sonarcloud.gradle"
apply from: "${rootProject.projectDir}/gradle/stagingMaven.gradle"

allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors
            // allWarningsAsErrors = true

            // freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
            // Set JVM target to 8
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }
}

subprojects { project ->
    apply plugin: 'checkstyle'

    task checkstyle(type: Checkstyle, group: 'check') {
        configFile file("${rootDir}/config/checkstyle/checkstyle.xml")
        configProperties.checkstyleJavaHeader = file("${rootDir}/config/checkstyle/java.header")
        source 'src/main/java', 'src/test/java', 'src/androidTest/java'
        ignoreFailures false
        showViolations true
        include '**/*.java'
        classpath = files()
    }

    afterEvaluate {
        if (project.tasks.findByName('check')) {
            check.dependsOn('checkstyle')
        }
    }
}
