apply plugin: 'com.android.application'
apply plugin: 'jacoco'

def withAutotrack = true

if (withAutotrack) {
    apply plugin: 'com.growingio.android.autotracker'
}

buildscript {
    repositories {
        google()
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath "com.growingio.android:autotracker-gradle-plugin:${releaseConfiguration.releaseVersion}"
    }
}

android {
    compileSdkVersion buildConfiguration.compileVersion
    defaultConfig {
        applicationId "com.gio.test.three"
        minSdkVersion buildConfiguration.minSdkVersion
        targetSdkVersion buildConfiguration.targetSdkVersion

        buildConfigField "boolean", "withAutotrack", "$withAutotrack"

        testInstrumentationRunner "com.growingio.autotest.TrackAndroidJUnitRunner"
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
        multiDexEnabled false
    }

    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }
}

growingAutotracker {
    development true
    logEnabled true
//    excludePackages "com.gio.test.three.autotrack.fragments", "com.example"
}
def rootDir = project.rootProject.rootDir

def coverageSourceDirs = [
        "$rootDir/growingio-tracker/src/main/java",
        "$rootDir/growingio-autotracker/src/main/java",
        "$rootDir/growingio-autotracker-gradle-plugin/src/main/java"
]

def coverageClassDirs = [
        "$rootDir/growingio-tracker/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-autotracker/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-autotracker-gradle-plugin/build/classes/java/main"
]

task jacocoTestReport(type: JacocoReport, group: 'Reporting', dependsOn: 'connectedCheck') {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    sourceDirectories = files(coverageSourceDirs)

    executionData = fileTree(
            dir: "$rootDir",
            include: ["**/*.exec", "**/*.ec"]
    )

    doFirst {
        println(project.rootProject.rootDir)
        classDirectories = files(files(coverageClassDirs).collect {
            fileTree(dir: it, exclude: [
                    'android/**',
                    'androidx/**',
                    'com/example/**',
                    'com/gio/**',
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
            ])
        })
    }
}

dependencies {
    androidTestImplementation "com.google.truth:truth:1.0"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:3.12.1"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "org.mockito:mockito-core:2.27.0"
    androidTestImplementation("org.awaitility:awaitility:4.0.3") {
        exclude group: 'org.hamcrest', module: 'hamcrest'
    }

    implementation project(':growingio-tracker')
    implementation project(':demo-core')
    if (withAutotrack) {
        implementation project(":demo-autotrack")
    }

    compileOnly libraries.androidx.appcompat
}
